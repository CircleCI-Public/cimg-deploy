# vim:set ft=dockerfile:

# Do not edit individual Dockerfiles manually. Instead, please make changes to the Dockerfile.template, which will be used by the build script to generate Dockerfiles.

FROM cimg/base:edge-22.04

LABEL maintainer="Community & Partner Engineering Team <community-partner@circleci.com>"

RUN sudo apt-get update && sudo apt-get install --yes --no-install-recommends \
		python3-pip \
		rsync \
	&& \
	sudo rm -rf /var/lib/apt/lists/* && \

	# Setup Ansible
	pip install ansible && \
	pip cache purge && \

	# Setup Packer & Terraform
	curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add - && \
	sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main" && \

	# Setup Salt
	sudo curl -fsSL -o /usr/share/keyrings/salt-archive-keyring.gpg https://repo.saltproject.io/py3/ubuntu/20.04/amd64/latest/salt-archive-keyring.gpg && \
	echo "deb [signed-by=/usr/share/keyrings/salt-archive-keyring.gpg arch=amd64] https://repo.saltproject.io/py3/ubuntu/20.04/amd64/latest focal main" | sudo tee /etc/apt/sources.list.d/salt.list && \

	# Setup Kubectl
	# You must use a kubectl version that is within one minor version difference of your cluster. For example, a v1.23 client can communicate with v1.22, v1.23, and v1.24 control planes.
	sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg && \
	echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list && \

	# Setup nFPM
	echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list && \

	# Install tools from added Apt repos
	sudo apt-get update && sudo apt-get install --yes --no-install-recommends \
		kubectl \
		nfpm \
		packer \
		salt-master \
		terraform \
	&& \
	sudo rm -rf /var/lib/apt/lists/*

# Install AWS related tools
RUN sudo apt-get update && sudo apt-get install --yes --no-install-recommends \
		amazon-ecr-credential-helper \
	&& \
	sudo rm -rf /var/lib/apt/lists/* && \
	curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
	unzip awscliv2.zip && \
	sudo ./aws/install && \
	rm -fR aws* && \
	aws --version

# Install GCP related tools
RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
	curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/cloud.google.gpg && \
	sudo apt-get update && sudo apt-get install --yes --no-install-recommends \
		google-cloud-cli \
		google-cloud-cli-app-engine-go \
		google-cloud-cli-app-engine-python \
		google-cloud-cli-gke-gcloud-auth-plugin \
		google-cloud-cli-kubectl-oidc \
	&& \
	sudo rm -rf /var/lib/apt/lists/* && \
	gcloud --version

# Install Azure related tools
RUN sudo apt-get update && sudo apt-get install --yes --no-install-recommends \
		ca-certificates \
		apt-transport-https \
		lsb-release \
		gnupg \
	&& \
	sudo rm -rf /var/lib/apt/lists/* && \
	curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null && \
	AZ_REPO=$(lsb_release -cs) && \
	echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list && \
	sudo apt-get update && sudo apt-get install azure-cli && \
	sudo rm -rf /var/lib/apt/lists/* && \
	az --version
